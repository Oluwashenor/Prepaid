@page "/dashboard"


<HeaderComponent />

@* Central Top Region *@
<div class="flex flex-col lg:flex-row mt-10 lg:space-x-6 lg:items-start">
    @* Left card Row *@
    <div class="flex flex-col w-full lg:w-[64%] lg:justify-between">
        @* Top Row *@
        <div class="flex flex-col lg:flex-row lg:justify-between">
            @* Card *@
            <CardComponent CardNumber="@CardNumber" Card="@Card" HideCardNumberEvent="HideCard" NumberHidden=@CardNumberHidden />
            @* Bank and Card Details *@
            <div class="flex flex-row justify-between lg:w-[48%] mt-6 md:mt-4 lg:mt-0">
                @* Card Wallet *@
                <CardBalanceComponent Balance="@Card.Balance" />
                @* Bank Details *@
                <BankDetailsComponent BankDetail="BankDetail" />
            </div>
        </div>
        @* Bottom Row *@
        <div class="flex flex-col w-auto rounded-2xl shadow-md py-3 px-3 mt-6">
            <div class="flex justify-between items-center my-2">
                <span>Payment Method</span>
                <button class="flex border-2 py-2 px-3 rounded-lg bg-[#242426] text-white space-x-1 items-center shadow-md hover:shadow-xl">
                    <span>
                        <img class="h-4" src="/lib/m-icons/add_white.svg" alt="Menu" />
                    </span>
                    <span>ADD NEW CARD</span>
                </button>
            </div>
            <div class="md:w-[50%] lg-w-full border-[1px] py-4 px-2 rounded-lg flex justify-between">
                <CardNumberComponent DarkIcon=true NumberHidden="CardNumberHidden" CardNumber="@CardNumber" HideCardNumberEvent="HideCard" ShowImage=true />
            </div>
        </div> 
    </div>

    @* Right card Row (Transaction Dispute) *@
    <TransactionDisputes/>
</div>

@* Transaction History *@

<TransactionHistory />


@code {
    public CardInfo Card { get; set; } = new();
    public BankDetail BankDetail { get; set; } = new();
    public string? CardNumber { get; set; }
    public bool CardNumberHidden { get; set; } = true;
    protected override void OnInitialized()
    {
        Card = new()
            {
                Balance = 2205002,
                CardNumber = "4521 5234 6234 7852",
                CardType = "MasterCard",
                Expires = DateTime.Now.AddYears(1),
                Owner = "Oliver Johnson"
            };
        CardNumber = Card.CardNumber;
        BankDetail = new()
            {
                AccountName = Card.Owner,
                AccountNumber = "10129203033",
                Bank = "Providus"
            };
        HideCard(true);
    }

    private void HandleLogin()
    {
        NavManager.NavigateTo("/dashboard", forceLoad: true);
    }

    private void ActivateCard()
    {
        NavManager.NavigateTo("/dashboard", forceLoad: true);
    }

    private async void HideCard(bool hash)
    {
        var digits = Card?.CardNumber;
        if (string.IsNullOrEmpty(digits)) return;
        if (hash)
        {
            string lastFour = digits.Substring(Math.Max(0, digits.Length - 4));
            CardNumber = $"**** **** **** {lastFour}";
        }
        else
        {
            CardNumber = Card?.CardNumber;
        }
        CardNumberHidden = hash;
    }
}